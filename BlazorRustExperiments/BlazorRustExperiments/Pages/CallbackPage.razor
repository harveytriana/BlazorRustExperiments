@page "/callback-sample"
@implements IDisposable

<h3>Running Rust process with callback</h3>
<hr />
<p>Look at the console output in browser development tools</p>
<Board @ref="board" />

@code {
    Board board;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) {
            board.Add("Processing...", "red");
            await Task.Delay(600);
            await Run();
        }
    }

    async Task Run()
    {
        CallbackExperiment.Echo += Prompt;
        CallbackExperiment.Run();

        board.Add("\nOnce again...", "red");

        await InvokeAsync(StateHasChanged);
        await Task.Delay(600);

        CallbackExperiment.Run();

        board.Add("\nReady", "cadetblue");
    }

    async Task Prompt(string message)
    {
        Console.WriteLine("Echo: {0}", message);
        board.Add(message);

        await Task.Delay(0);
    }

    public void Dispose()
    {
        CallbackExperiment.Echo -= Prompt;
    }
}