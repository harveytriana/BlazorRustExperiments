@page "/json-test"
@using System.Text.Json
@using System.Text.Json.Serialization

<PageTitle>Calling Rust</PageTitle>
<h3>Interchange JSON data</h3>
<Board @ref="board" />

@code {
    [DllImport(RLIB)] static extern IntPtr get_user(int user_id);
    [DllImport(RLIB)] static extern IntPtr describe_person(int age);
    [DllImport(RLIB)] static extern void post_user([MarshalAs(UnmanagedType.LPUTF8Str)] string js);

    class Person
    {
        [JsonPropertyName("person_id")]
        public int Id { get; set; }
        [JsonPropertyName("first_name")]
        public string? FirstName { get; set; }
        [JsonPropertyName("last_name")]
        public string? LastName { get; set; }
        [JsonPropertyName("age")]
        public int Age { get; set; }
    }
    class User
    {
        [JsonPropertyName("user_id")]
        public int Id { get; set; }
        [JsonPropertyName("person")]
        public Person Person { get; set; }
        [JsonPropertyName("password")]
        public string Password { get; set; }
    }
    // OR
    //record Person(
    //    int person_id,
    //    int age,
    //    string first_name,
    //    string last_name);
    //record User(
    //    int user_id,
    //    string password,
    //    Person person);

    Board board;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender) {
            RunSamples();
        }
    }

    void RunSamples()
    {
        // READING -----------------------------------------------------------------------------
        board.Add("**READING JSON");

        var jsPointer = get_user(79);
        var js = jsPointer.TextFromPointer();
        var user = JsonSerializer.Deserialize<User>(js);

        board.Add(string.Format("JSON data obtained from the library:\n{0}\n", js.PrettyJson()));
        board.Add(string.Format("Identifier : {0}", user.Id));
        board.Add(string.Format("First name : {0}", user.Person.FirstName));
        board.Add(string.Format("Last name  : {0}", user.Person.LastName));
        board.Add(string.Format("Age        : {0}", user.Person.Age));

        // SENDING -----------------------------------------------------------------------------
        board.Add("\n**SENDING JSON");
        // random object
        var alisson = new User {
            Id = 9999999,
            Password = "hashed password",
            Person = new Person {
                Id = 1234,
                FirstName = "Alisson Johana",
                LastName = "Triana",
                Age = 18,
            }
        };
        js = JsonSerializer.Serialize(alisson);

        board.Add(string.Format("JSON data will send to the library:\n{0}\n", js.PrettyJson()));
        // send to lib
        try {
            post_user(js);
        }
        catch { }
        board.Add("\nSee the console output for results.", "coral");

    }

}
